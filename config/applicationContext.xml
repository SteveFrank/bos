<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
		
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	
	<!-- 配置本地会话工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- hibernate的配置 -->
		<property name="hibernateProperties">
			<props>       
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/online/bos/domain</value>
			</list>
		</property> 
		
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 组件扫描配置 -->
	<context:component-scan base-package="com.online.bos"></context:component-scan>
	
	<!-- 支持注解 -->
	<context:annotation-config />
	
	<!-- 事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 需要重点掌握的远程调用的方法 -->
	<!-- 配置远程服务的代理对象 -->
	<!-- 利用该方法创建代理类 -->
	<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceInterface" value="com.online.bos.crm.CustomerService"/>
		<property name="serviceUrl" value="http://localhost:8080/boscrm/remoting/customer"/>
	</bean>
	
	<!-- 定义安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入realm -->
		<property name="realm" ref="bosRealm"></property>
	</bean>
	
	<!-- 自定义Realm -->
	<bean id="bosRealm" class="com.online.bos.shiro.BOSRealm"></bean>
	
	<!-- 配置shiro的过滤器 -->
	<!-- 当前对象用于创建shiro框架需要的过滤器对象 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入系统的登录访问路径 -->
		<!-- 跳转到登录页面 -->
		<property name="loginUrl" value="/login.jsp"></property>
		<!-- 成功页面 -->
		<property name="successUrl" value="/index.jsp"></property>
		<!-- 权限不足的错误提示页面 -->
		<property name="unauthorizedUrl" value="/500.html"></property>
		<!-- 基于URL拦截权限控制 -->
		<!-- 
			URL路径自上而下进行匹配
		 -->
		<!-- 
			anon过滤器处理原则 ：随便访问
			authc需要进行权限认证
			perms必须要staff权限
		 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/easyuidemo/** = anon
				/images/** = anon
				/js/** = anon
				/json/** = anon
				/user/** = anon
				/validatecode.jsp* = anon
				/login.jsp* = anon
				/user/userAction_login.action = anon
				/page_base_staff.action = perms["staff"]
				/* = authc
			</value>
		</property>
	</bean>
	
</beans>
